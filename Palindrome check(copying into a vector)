// This approach is not optimal : first we will copy the content of linked list into a vector and then we will check whether it is palindrome or not
//SOURCE CODE:

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:

    bool isPalindrome(ListNode* head) {
    vector<int> v;
    ListNode* temp=head;
    while(temp != NULL ){
        v.push_back(temp->val);
        temp=temp->next;
    } int n= v.size();
    int lo=0; int hi= n-1;
    while(lo<=hi){
        if(v[lo]!=v[hi])
        return false;
        lo++;
        hi--;
    }
  return true;
    }
};
